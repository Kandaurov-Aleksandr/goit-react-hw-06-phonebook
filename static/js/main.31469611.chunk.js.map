{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsReducer.js","redux/store.js","components/ContactsEditor/ContactEditor.js","components/ContactList/ContactList.js","components/Filter.js","components/AlertMessage/AlertMessage.js","components/App.js","index.js"],"names":["contactsActions","addContact","createAction","contact","payload","contacts","Object","objectSpread","id","uuidv4","removeContact","getFilterValue","toggleAlert","items","createReducer","_createReducer","defineProperty","state","action","concat","toConsumableArray","filter","combineReducers","alert","arguments","length","undefined","type","store","configureStore","reducer","contactsReducer","ContactEditor","name","number","handleChangeName","e","_this","setState","target","value","handleChangeNumber","reset","dublicate","props","some","item","toLowerCase","handleSubmit","preventDefault","onAlert","setTimeout","onAddContact","_this$state","this","react_default","a","createElement","className","onSubmit","onChange","Component","mapDispatchToProps","connect","onRemoveContact","_state$contacts","normalizedFilter","toLocaleLowerCase","includes","_ref","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","onClick","onChangeFilter","AlertMessage","in","appear","unmountOnExit","components_AlertMessage_AlertMessage","components_ContactsEditor_ContactEditor","components_Filter","components_ContactList_ContactList","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.31469611.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n// import actionTypes from \"./contactActionTypes\"\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', contact => ({\n  payload: {\n    contacts: {\n      id: uuidv4(),\n      ...contact,\n    }\n}}));\n\nconst removeContact = createAction('contacts/remove');\nconst getFilterValue = createAction('contacts/getFilterValue');\nconst toggleAlert = createAction('contacts/existContact');\n\nexport default {\n  addContact,\n  removeContact,\n  getFilterValue,\n  toggleAlert,\n};"," import { combineReducers } from 'redux';\n import { createReducer } from \"@reduxjs/toolkit\";\n import contactsActions from \"./contactsActions\";\n \nconst addContact = (state, action) => {\n  return [...state, action.payload.contacts];\n};\n\nconst removeContact = (state, action) => {\n  return state.filter(contact => contact.id !== action.payload)\n}\n\n const items = createReducer([], {\n   [contactsActions.addContact]: addContact,\n   [contactsActions.removeContact]: removeContact,\n })\n\n const filter = createReducer('', {\n  [contactsActions.getFilterValue]: (state, action) => action.payload,\n });\n\n const alert = (state = false, {type}) => {\n   switch (type) {\n     case contactsActions.toggleAlert.type:\n       return !state;\n   \n     default:\n       return state;\n   }\n };\n\n export default combineReducers({\n   items,\n   filter,\n   alert,\n });","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from '../redux/contacts/contactsReducer'\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  },\n});\n\nexport default store;","import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport PropTypes from 'prop-types';\nimport './ContactEditor.css'\n\n class ContactEditor extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n\n state = {\n   name: '',\n   number: '',\n };\n\n handleChangeName = e => {\n   this.setState({\n     name: e.target.value,\n   });\n };\n\n handleChangeNumber = e => {\n   this.setState({\n     number: e.target.value,\n   });\n };\n\n reset = () => {\n  this.setState({ name: \"\", number: \"\" });\n };\n\n dublicate = () => {\n  return this.props.items.some(\n    (item) => item.name.toLowerCase() === this.state.name.toLowerCase()\n  );\n };\n\n handleSubmit = e => {\n  e.preventDefault();\n\n  if (this.dublicate()) {\n    this.props.onAlert();\n      setTimeout(() => {\n        this.props.onAlert();\n      }, 2000);\n  } else {\n      this.props.onAddContact({ ...this.state });\n      this.reset();\n  };\n };\n\n render(){\n   const { name, number } = this.state;\n   return (\n    <form className=\"ContactEditor\" onSubmit={this.handleSubmit}>\n    <label className=\"ContactEditor-label\">\n      Name\n      <input\n        className=\"ContactEditor-input\"\n        type=\"text\"\n        value={name}\n        onChange={this.handleChangeName}\n      />\n    </label>\n    <label className=\"ContactEditor-label\">\n      Number\n      <input\n        className=\"ContactEditor-input\"\n        type=\"text\"\n        value={number}\n        onChange={this.handleChangeNumber}\n      />\n    </label>\n\n    <button type=\"submit\" className=\"ContactEditor-button\">\n      Add contact\n    </button>\n  </form>\n   )\n }\n};\n\nconst mapStateToProps = state => {\n  return {\n    items: state.contacts.items,\n  }\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContact,\n  onAlert: contactsActions.toggleAlert,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditor);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport {TransitionGroup, CSSTransition} from 'react-transition-group'\nimport './ContactList.css'\n\nconst ContactList = ({ contacts, onRemoveContact}) => (\n  <TransitionGroup component='ul' className=\"ContactList\">\n    {contacts.map(contact => (\n      <CSSTransition key={contact.id} timeout={500} classNames=\"ContactList-item\">\n        <div className=\"ContactList-item\">\n          <div className=\"ContactList-text\">{contact.name}: {contact.number}</div>\n          <button\n          type=\"button\"\n          className=\"ContactList-button\"\n          onClick={() =>\n            onRemoveContact(contact.id)\n          }\n          >\n            Delete\n          </button>\n        </div>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nconst mapStateToProps = state => {\n  const { items, filter } = state.contacts;\n  const normalizedFilter = filter.toLocaleLowerCase();\n\n  const visibleContacts = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter));\n\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = {\n  onRemoveContact: contactsActions.removeContact,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../redux/contacts/contactsActions\";\nimport './ContactsEditor/ContactEditor.css';\n\nconst Filter = ({ value, onChangeFilter}) => (\n  <div className=\"ContactEditor\">\n    <p>Find contact by name</p>\n    <input \n    type=\"text\" \n    className=\"ContactEditor-input\" \n    value={value} \n    onChange={e => onChangeFilter(e.target.value)} \n    />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.getFilterValue,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\nimport './AlertMessage.css';\n\nfunction AlertMessage () {\n  return (\n    <div className='alert'>\n      <span className='alert-message'>\n        Contact already exists!\n      </span>\n    </div>\n  )\n};\n\nexport default AlertMessage;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { CSSTransition } from 'react-transition-group'\nimport ContactEditor from '../components/ContactsEditor/ContactEditor';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from \"./Filter\";\nimport AlertMessage from \"./AlertMessage/AlertMessage\"\nimport './App.css'\n// import PropTypes from 'prop-types';\n\nfunction App ({alert}) {\n  return (\n    <div className='wrapper'>\n      <div className='header'>\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames='fade'\n          timeout={500}\n          unmountOnExit\n        >\n          <h1 className='logo'>Phonebook</h1>\n        </CSSTransition>\n        {alert && <AlertMessage />}\n      </div>\n\n      <ContactEditor />\n      <Filter />\n      <ContactList />\n\n    </div>\n  )\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    alert: state.contacts.alert,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}